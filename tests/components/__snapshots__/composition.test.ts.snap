// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component composition various update scenarios reconciliation alg is not confused in some specific situation 1`] = `
"function anonymous(ctx, metadata
) {
    // Template: \`__template__28\`
    let _1 = {};
    let vn3 = this.makeComponent(\`k2\`, metadata, \\"Child\\", ctx, _1);
    let key4 = 4;
    let _5 = {};
    let vn7 = this.makeComponent(\`k6__\${key4}\`, metadata, \\"Child\\", ctx, _5);
    let vn9 = {type: 2, tag: \\"div\\", children: [vn3,vn7], key: \`k8\`};
    return vn9;
}"
`;

exports[`component composition various update scenarios reconciliation alg works for t-foreach in t-foreach 1`] = `
"function anonymous(ctx, metadata
) {
    // Template: \`__template__30\`
    let vn2 = {type: 2, tag: \\"div\\", children: [], key: \`k1\`};
    let _4 = ctx['state'].s;
    let length3 = _4.length;
    ctx = Object.create(ctx);
    for (let i0 = 0; i0 < length3; i0++) {
        ctx.section_first = i0 === 0;
        ctx.section_last = i0 === length3 - 1;
        ctx.section = _4[i0];
        ctx.section_index = i0;
        ctx.section_value = _4[i0];
        let _6 = ctx['section'].blips;
        let length5 = _6.length;
        ctx = Object.create(ctx);
        for (let i1 = 0; i1 < length5; i1++) {
            ctx.blip_first = i1 === 0;
            ctx.blip_last = i1 === length5 - 1;
            ctx.blip = _6[i1];
            ctx.blip_index = i1;
            ctx.blip_value = _6[i1];
            let _7 = {blip:ctx['blip']};
            let vn9 = this.makeComponent(\`k8__\${i0}__\${i1}\`, metadata, \\"Child\\", ctx, _7);
            vn2.children.push(vn9);
        }
        ctx = ctx.__proto__;
    }
    ctx = ctx.__proto__;
    return vn2;
}"
`;

exports[`component composition various update scenarios reconciliation alg works for t-foreach in t-foreach, 2 1`] = `
"function anonymous(ctx, metadata
) {
    // Template: \`__template__32\`
    let vn2 = {type: 2, tag: \\"div\\", children: [], key: \`k1\`};
    let _4 = ctx['state'].rows;
    let length3 = _4.length;
    ctx = Object.create(ctx);
    for (let i0 = 0; i0 < length3; i0++) {
        ctx.row_first = i0 === 0;
        ctx.row_last = i0 === length3 - 1;
        ctx.row = _4[i0];
        ctx.row_index = i0;
        ctx.row_value = _4[i0];
        let key5 = ctx['row'];
        let vn7 = {type: 2, tag: \\"p\\", children: [], key: \`k6__\${key5}\`};
        vn2.children.push(vn7);
        let _9 = ctx['state'].cols;
        let length8 = _9.length;
        ctx = Object.create(ctx);
        for (let i1 = 0; i1 < length8; i1++) {
            ctx.col_first = i1 === 0;
            ctx.col_last = i1 === length8 - 1;
            ctx.col = _9[i1];
            ctx.col_index = i1;
            ctx.col_value = _9[i1];
            let key10 = ctx['col'];
            let _11 = {row:ctx['row'],col:ctx['col']};
            let vn13 = this.makeComponent(\`k12__\${key5}__\${key10}\`, metadata, \\"Child\\", ctx, _11);
            let vn15 = {type: 2, tag: \\"p\\", children: [vn13], key: \`k14__\${key10}\`};
            vn7.children.push(vn15);
        }
        ctx = ctx.__proto__;
    }
    ctx = ctx.__proto__;
    return vn2;
}"
`;

exports[`component composition various update scenarios same t-keys in two different places 1`] = `
"function anonymous(ctx, metadata
) {
    // Template: \`__template__34\`
    let key1 = 1;
    let _2 = {blip:'1'};
    let vn4 = this.makeComponent(\`k3__\${key1}\`, metadata, \\"Child\\", ctx, _2);
    let vn6 = {type: 2, tag: \\"div\\", children: [vn4], key: \`k5\`};
    let key7 = 1;
    let _8 = {blip:'2'};
    let vn10 = this.makeComponent(\`k9__\${key7}\`, metadata, \\"Child\\", ctx, _8);
    let vn12 = {type: 2, tag: \\"div\\", children: [vn10], key: \`k11\`};
    let vn14 = {type: 2, tag: \\"div\\", children: [vn6,vn12], key: \`k13\`};
    return vn14;
}"
`;

exports[`component composition various update scenarios t-key on a component with t-if, and a sibling component 1`] = `
"function anonymous(ctx, metadata
) {
    // Template: \`__template__36\`
    let vn2 = {type: 2, tag: \\"div\\", children: [], key: \`k1\`};
    if (false) {
        let key3 = 'str';
        let _4 = {};
        let vn6 = this.makeComponent(\`k5__\${key3}\`, metadata, \\"Child\\", ctx, _4);
        vn2.children.push(vn6);
    }
    let _7 = {};
    let vn9 = this.makeComponent(\`k8\`, metadata, \\"Child\\", ctx, _7);
    vn2.children.push(vn9);
    return vn2;
}"
`;
