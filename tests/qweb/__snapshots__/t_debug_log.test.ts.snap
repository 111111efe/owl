// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`debugging t-debug 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BText} = Blocks;
  let {elem, toString, withDefault, call, zero, scope, getValues, owner, callSlot} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div><owl-anchor/></div>\`);
    children = new Array(1);
  }
  
  class Block2 extends BNode {
    static el = elem(\`<span>hey</span>\`);
  }
  
  return ctx => {
    debugger;
    const b1 = new Block1();
    if (true) {
      debugger;
      const b2 = b1.children[0] = new Block2();
    }
    return b1;
  }
}"
`;

exports[`debugging t-log 1`] = `
"function anonymous(Blocks, utils
) {
  let {BCollection, BComponent, BComponentH, BHtml, BMulti, BNode, BText} = Blocks;
  let {elem, toString, withDefault, call, zero, scope, getValues, owner, callSlot} = utils;
  
  class Block1 extends BNode {
    static el = elem(\`<div/>\`);
  }
  
  return ctx => {
    ctx = Object.create(ctx);
    const b1 = new Block1();
    ctx[\`foo\`] = 42;
    console.log(ctx['foo']+3);
    return b1;
  }
}"
`;
